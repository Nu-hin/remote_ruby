# Set up Bundler if Gemfile is present
require 'bundler/setup' if File.exist?('Gemfile')

<%= inline_file('remote_context.rb') %>

__context__ = RemoteRuby::RemoteContext.new(__FILE__)

# Unmarshalling local variables
<% client_locals_base64.each do |name, base64_val| %>
<%= name %> = __context__.unmarshal(:<%= name %>, '<%= base64_val %>')
<% end %>

$stdout.sync = true
$stderr.sync = true

__context__.execute do
<% if plugins.any? %>
  # Start of plugin-added code
<%plugins.each do |pl| %>
  # <%= pl.class.name %>
<%= pl.code_header.gsub(/^/,'  ') %>
  # End of <%= pl.class.name %>
<%end%>
  # End of plugin-added code
<% end %>

  # Start of client code
<%= ruby_code.gsub(/^/, '  ') %>
  # End of client code
end

File.binwrite(__FILE__, __context__.dump)
